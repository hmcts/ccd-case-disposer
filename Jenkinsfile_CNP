#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "ccd"
def component = "case-disposer"

GradleBuilder builder = new GradleBuilder(this, product)

def vaultOverrides = [
  'preview' : 'aat'
]

def secrets = [
  'ccd-${env}': [
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withPipeline(type, product, component) {
  after('test') {
    // hmcts/cnp-jenkins-library may fail to copy artifacts after checkstyle error so repeat command (see /src/uk/gov/hmcts/contino/GradleBuilder.groovy)
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/checkstyle/*.html'

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/pmd/*.html'
  }

  after('test') {
    builder.gradle('integration')
  }

  enableAksStagingDeployment()
  disableLegacyDeployment()
  nonServiceApp()

  after('akschartsinstall') {
    echo "Overriding vault environment"
    overrideVaultEnvironments(vaultOverrides)
    echo "Loading the secrets again"
    loadVaultSecrets(secrets)

    // Set required environment variables to run functional tests apart from one in vaults.
    env.DATA_STORE_DB_HOST = "ccd-case-disposer-pr-${CHANGE_ID}-postgresql.service.core-compute-preview.internal"
    env.DATA_STORE_DB_PORT = "5432"
    env.ELASTIC_SEARCH_DATA_NODES_HOSTS = "http://es-ccd-case-disposer-pr-${CHANGE_ID}.service.core-compute-preview.internal:9200"
    // For preview we might have to point to "develop" PR of data_store ES url and DB.
    // (or hardcode standard java chart username/password of postgres)

    // test if Elasticsearch is reachable
    sh "nc -zv es-ccd-case-disposer-pr-${CHANGE_ID}.service.core-compute-preview.internal 9200"

    echo "Verifying that functional test run correctly"
    try {
      builder.gradle('functional')
    } finally {
      junit '**/test-results/**/*.xml'
    }
  }

  after('functionalTest:preview') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "ccd-case-disposer Functional Test Report"
    ]
  }

  after('functionalTest:aat') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "ccd-case-disposer Functional Test Report"
    ]
  }
}
