#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "ccd"
def component = "case-disposer"

GradleBuilder builder = new GradleBuilder(this, product)

def vaultOverrides = [
  'preview' : 'aat'
]

def secrets = [
  'ccd-${env}': [
          secret('idam-case-disposer-system-user-username', 'IDAM_CASE_DISPOSER_SYSTEM_USER_USERNAME'),
          secret('idam-case-disposer-system-user-password', 'IDAM_CASE_DISPOSER_SYSTEM_USER_PASSWORD'),
          secret('idam-case-disposer-client-secret', 'IDAM_CASE_DISPOSER_CLIENT_SECRET'),
          secret('data-store-api-POSTGRES-DATABASE', 'DATA_STORE_DB_NAME'),
          secret('data-store-api-POSTGRES-USER', 'DATA_STORE_DB_USERNAME'),
          secret('data-store-api-POSTGRES-PASS', 'DATA_STORE_DB_PASSWORD')
  ]
]

def prSecrets = [
  'ccd-aat': [
          secret('idam-case-disposer-system-user-username', 'IDAM_CASE_DISPOSER_SYSTEM_USER_USERNAME'),
          secret('idam-case-disposer-system-user-password', 'IDAM_CASE_DISPOSER_SYSTEM_USER_PASSWORD'),
          secret('idam-case-disposer-client-secret', 'IDAM_CASE_DISPOSER_CLIENT_SECRET'),
          secret('ccd-case-disposer-s2s-secret', 'IDAM_KEY_CCD_CASE_DISPOSER'),
          secret('case-disposer-POSTGRES-DATABASE', 'DATA_STORE_DB_NAME'),
          secret('case-disposer-POSTGRES-USER', 'DATA_STORE_DB_USERNAME'),
          secret('case-disposer-POSTGRES-PASS', 'DATA_STORE_DB_PASSWORD')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withPipeline(type, product, component) {
  after('test') {
    // hmcts/cnp-jenkins-library may fail to copy artifacts after checkstyle error so repeat command (see /src/uk/gov/hmcts/contino/GradleBuilder.groovy)
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/checkstyle/*.html'

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/pmd/*.html'
  }

  after('test') {
    builder.gradle('integration')
  }

  enableAksStagingDeployment()
  disableLegacyDeployment()
  nonServiceApp()

  onPR() {
    echo "Loading PR secrets"
    loadVaultSecrets(prSecrets)
  }

  onNonPR() {
    echo "Loading secrets"
    loadVaultSecrets(secrets)
  }

  after('akschartsinstall') {
    // Set required environment variables to run functional tests apart from one in vaults.
    env.DATA_STORE_DB_HOST = "ccd-data-store-api-staging-postgres-db-v11-aat.postgres.database.azure.com"
    env.DATA_STORE_DB_PORT = "5432"
    env.DATA_STORE_DB_OPTIONS = "?sslmode=require"
    env.ELASTIC_SEARCH_DATA_NODES_HOSTS = "http://es-ccd-case-disposer-pr-${CHANGE_ID}.service.core-compute-preview.internal:9200"
    env.ELASTIC_SEARCH_ENABLED = true
    env.ELASTIC_SEARCH_HOSTS = "es-ccd-case-disposer-pr-${CHANGE_ID}.service.core-compute-preview.internal:9200"
    env.DEFINITION_STORE_HOST = "http://ccd-definition-store-pr-${CHANGE_ID}.service.core-compute-preview.internal"
    env.IDAM_S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"

    // For preview we might have to point to "develop" PR of data_store ES url and DB.
    // (or hardcode standard java chart username/password of postgres.)

    // test if Elasticsearch is reachable
    // sh "nc -zv es-ccd-case-disposer-pr-${CHANGE_ID}.service.core-compute-preview.internal 80"
    // Above aline is temporarily disabled to fix the master pipeline. The logic per environment for the URL formations should be corrected by the feature team.

    //  BLOCKED BY https://tools.hmcts.net/jira/browse/RDM-13045 and https://tools.hmcts.net/jira/browse/DTSPO-6431
    //    // test if Postgres is reachable
    //    sh "nc -zv ccd-case-disposer-${env.BRANCH_NAME}-postgresql-0.ccd.svc.cluster.local 5432"
    //
    //    echo "Verifying that functional test run correctly"
    try {
      builder.gradle('functional')
    } finally {
      junit '**/test-results/**/*.xml'
    }
  }

  after('functionalTest:preview') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "ccd-case-disposer Functional Test Report"
    ]
  }

  after('functionalTest:aat') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "ccd-case-disposer Functional Test Report"
    ]
  }
}
