job:
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  kind: CronJob
  schedule: "*/20 * * * *"
  startingDeadlineSeconds: 180
  concurrencyPolicy: Forbid
global:
  jobKind: CronJob

elastic:
  enabled: true

elasticsearch:
  clusterName: "es"
  imageTag: "7.17.1"
  replicas: 1
  minimumMasterNodes: 1
  antiAffinity: "soft"
  esJavaOpts: "-Xmx512m -Xms512m"
  persistence:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
    path: /
    hosts:
      - es-${SERVICE_FQDN}
  environment:
    action.auto_create_index: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*

logstash:
  image:
    repository: hmctspublic.azurecr.io/ccd/logstash
    tag: latest
    pullPolicy: IfNotPresent
  logstashJavaOpts: -Xmx1g -Xms512M
  persistence:
    enabled: false
  volumeMounts:
    - name: pipeline
      mountPath: /usr/share/logstash/files
  elasticsearch:
    host: ${SERVICE_NAME}-es-master
    port: 9200
  configTpl:
    xpack.monitoring.enabled: "false"
    db.url: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?stringtype=unspecified&ssl=false
    db.user: hmcts
    db.pwd: hmcts
    es.data.nodes.url: http://${SERVICE_NAME}-es-master:9200
  livenessProbe:
    initialDelaySeconds: 90


ccd:
  enabled: true
  ccd:
    adminWeb:
      enabled: false
    definitionImporter:
      enabled: false
    userProfileImporter:
      enabled: false
    apiGatewayWeb:
      enabled: false
    postgresql:
      enabled: true
    s2s:
      enabled: false
    elastic:
      enabled: false
    ras:
      enabled: false

  ingressHost: ${SERVICE_FQDN}

  global:
    ccdDefinitionStoreUrl: http://ccd-definition-store-${SERVICE_FQDN}
    ccdDataStoreUrl: http://ccd-data-store-api-${SERVICE_FQDN}
    ccdUserProfileUrl: http://ccd-user-profile-api-${SERVICE_FQDN}
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    ccdApiGatewayIngress: gateway-${SERVICE_FQDN}
    enableKeyVaults: true
    devMode: true

  ccd-definition-store-api:
    java:
      image: hmctspublic.azurecr.io/ccd/definition-store-api:latest
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
      imagePullPolicy: Always
      environment:
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
        ELASTIC_SEARCH_FAIL_ON_IMPORT: true
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_IDAM_KEY: ${CCD_DEFINITION_STORE_S2S_SECRET}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,ccd_case_document_am_api,ccd_case_disposer
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/hmcts
      devmemoryRequests: "1024Mi"
      devmemoryLimits: "2048Mi"
      keyVaults: [ ]

  ccd-data-store-api:
    java:
      image: hmctspublic.azurecr.io/ccd/data-store-api:latest
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}
      imagePullPolicy: Always
      memoryRequests: '1524Mi'
      cpuRequests: '900m'
      environment:
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_IDAM_KEY: ${CCD_DATA_STORE_S2S_SECRET}
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        HTTP_CLIENT_READ_TIMEOUT: '120000'
        HTTP_CLIENT_MAX_TOTAL: '300'
        HTTP_CLIENT_MAX_CLIENT_PER_ROUTE: '30'
        DATA_STORE_DB_MAX_POOL_SIZE: 80
        CCD_DOCUMENT_URL_PATTERN: 'http://dm-store.*'
        CASE_DOCUMENT_AM_URL: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
        DATA_STORE_DB_OPTIONS: "?stringtype=unspecified&ssl=disable&gssEncMode=disable"
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
      keyVaults: [ ]
      autoscaling:
        enabled: false

  postgresql:
    service:
      type: LoadBalancer
      annotations:
        external-dns.alpha.kubernetes.io/hostname: postgresql-${SERVICE_FQDN}.
        service.beta.kubernetes.io/azure-load-balancer-internal: "true"
