job:
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  kind: CronJob
  schedule: "*/20 * * * *"
  startingDeadlineSeconds: 180
  concurrencyPolicy: Forbid
  environment:
    APPLICATIONINSIGHTS_INSTRUMENTATIONKEY: "00000000-0000-0000-0000-000000000000"
    DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
    DATA_STORE_DB_PORT: 5432
    DATA_STORE_DB_NAME: ccd_data_store
    DATA_STORE_DB_USERNAME: hmcts
    DATA_STORE_DB_PASSWORD: hmcts
    DATA_STORE_DB_OPTIONS: "?sslmode=allow"
    ELASTIC_SEARCH_ENABLED: true
    LOG_AND_AUDIT_ENABLED: true
    ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
    ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
    DEFINITION_STORE_HOST: http://${SERVICE_NAME}-ccd-definition-store
    DOCUMENT_STORE_HOST: http://dm-store-aat.service.core-compute-aat.internal
    ROLE_ASSIGNMENT_HOST: http://am-role-assignment-service-aat.service.core-compute-aat.internal
    IDAM_S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
global:
  jobKind: CronJob

elastic:
  enabled: true

elasticsearch:
  nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    replicas: 1
  logstash:
    image:
    tag: ccd-cmc-logstash-latest

ccd:
  enabled: true
  ccd:
    adminWeb:
      enabled: false
    definitionImporter:
      enabled: false
    userProfileImporter:
      enabled: false
    apiGatewayWeb:
      enabled: false
    postgresql:
      enabled: true
    s2s:
      enabled: false
    elastic:
      enabled: true
    ras:
      enabled: false

  ingressHost: ${SERVICE_FQDN}

  global:
    ccdDefinitionStoreUrl: http://${SERVICE_NAME}-ccd-definition-store
    ccdDataStoreUrl: http://${SERVICE_NAME}-ccd-data-store-api
    ccdUserProfileUrl: http://${SERVICE_NAME}-ccd-user-profile-api
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    ccdApiGatewayIngress: http://${SERVICE_NAME}-ccd-api-gw
    enableKeyVaults: true
    devMode: true
    postgresUsername: hmcts
    postgresPassword: hmcts

  ccd-definition-store-api:
    java:
      image: hmctspublic.azurecr.io/ccd/definition-store-api:latest
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
      imagePullPolicy: Always
      environment:
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: "${SERVICE_NAME}-es-master"
        ELASTIC_SEARCH_FAIL_ON_IMPORT: true
        DEFINITION_STORE_DB_HOST: "${SERVICE_NAME}-postgresql"
        DEFINITION_STORE_DB_NAME: ccd_definition_store
        DEFINITION_STORE_DB_PORT: 5432
        DEFINITION_STORE_DB_USE_SSL: "true"
        DEFINITION_STORE_DB_OPTIONS: "?sslmode=allow"
        DEFINITION_STORE_IDAM_KEY: "${CCD_DEFINITION_STORE_S2S_SECRET}"
        WELSH_TRANSLATION_ENABLED: "false"
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,ccd_case_document_am_api,ccd_case_disposer
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/hmcts
      devmemoryRequests: "1024Mi"
      devmemoryLimits: "2048Mi"
      disableKeyVaults: true

  ccd-user-profile-api:
    java:
      image: hmctspublic.azurecr.io/ccd/user-profile-api:latest
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}
      imagePullPolicy: Always
      environment:
        USER_PROFILE_DB_HOST: "${SERVICE_NAME}-postgresql"
      disableKeyVaults: true

  ccd-data-store-api:
    java:
      image: hmctspublic.azurecr.io/ccd/data-store-api:latest
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}
      imagePullPolicy: Always
      memoryRequests: '1524Mi'
      cpuRequests: '900m'
      environment:
        DATA_STORE_DB_HOST: "${SERVICE_NAME}-postgresql"
        DATA_STORE_DB_PORT: 5432
        DATA_STORE_DB_NAME: "ccd_data_store"
        DATA_STORE_DB_OPTIONS: "?sslmode=allow"
        DATA_STORE_IDAM_KEY: ${CCD_DATA_STORE_S2S_SECRET}
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,ccd_case_disposer
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,ccd_case_disposer
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        HTTP_CLIENT_READ_TIMEOUT: '120000'
        HTTP_CLIENT_MAX_TOTAL: '300'
        HTTP_CLIENT_MAX_CLIENT_PER_ROUTE: '30'
        DATA_STORE_DB_MAX_POOL_SIZE: 80
        CCD_DOCUMENT_URL_PATTERN: 'http://dm-store.*'
        CASE_DOCUMENT_AM_URL: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        ROLE_ASSIGNMENT_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
      disableKeyVaults: true
      autoscaling:
        enabled: false

  postgresql:
    enabled: true
    image:
      tag: '11.16.0'
    auth:
      username: hmcts
      password: hmcts
    primary:
      service:
        ports:
          postgresql: 5432
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "${SERVICE_NAME}-postgresql"
          service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      initdb:
        scripts:
          init.sql: |-
            CREATE DATABASE "ccd_data_store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "ccd_definition_store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "role_assignment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      persistence:
        enabled: false
